// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CornerStore.Migrations
{
    [DbContext(typeof(CornerStoreDbContext))]
    [Migration("20240104214213_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CornerStore.Models.Cashier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Cashiers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "John",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Alice",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Bob",
                            LastName = "Johnson"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Emily",
                            LastName = "Williams"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Michael",
                            LastName = "Brown"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Sophia",
                            LastName = "Jones"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "William",
                            LastName = "Garcia"
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Olivia",
                            LastName = "Martinez"
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "James",
                            LastName = "Miller"
                        },
                        new
                        {
                            Id = 10,
                            FirstName = "Emma",
                            LastName = "Davis"
                        });
                });

            modelBuilder.Entity("CornerStore.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Snacks"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Beverages"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Candy"
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Frozen"
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "Household"
                        },
                        new
                        {
                            Id = 6,
                            CategoryName = "Beauty"
                        },
                        new
                        {
                            Id = 7,
                            CategoryName = "Bakery"
                        },
                        new
                        {
                            Id = 8,
                            CategoryName = "Dairy"
                        },
                        new
                        {
                            Id = 9,
                            CategoryName = "Produce"
                        },
                        new
                        {
                            Id = 10,
                            CategoryName = "Toiletries"
                        });
                });

            modelBuilder.Entity("CornerStore.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CashierId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("PaidOnDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CashierId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CashierId = 1,
                            PaidOnDate = new DateTime(2024, 1, 4, 15, 42, 13, 810, DateTimeKind.Local).AddTicks(2759)
                        },
                        new
                        {
                            Id = 2,
                            CashierId = 1,
                            PaidOnDate = new DateTime(2024, 1, 4, 15, 42, 13, 810, DateTimeKind.Local).AddTicks(2794)
                        },
                        new
                        {
                            Id = 3,
                            CashierId = 2
                        },
                        new
                        {
                            Id = 4,
                            CashierId = 2,
                            PaidOnDate = new DateTime(2024, 1, 4, 15, 42, 13, 810, DateTimeKind.Local).AddTicks(2796)
                        },
                        new
                        {
                            Id = 5,
                            CashierId = 3,
                            PaidOnDate = new DateTime(2024, 1, 4, 15, 42, 13, 810, DateTimeKind.Local).AddTicks(2798)
                        },
                        new
                        {
                            Id = 6,
                            CashierId = 3,
                            PaidOnDate = new DateTime(2024, 1, 4, 15, 42, 13, 810, DateTimeKind.Local).AddTicks(2799)
                        },
                        new
                        {
                            Id = 7,
                            CashierId = 4,
                            PaidOnDate = new DateTime(2024, 1, 4, 15, 42, 13, 810, DateTimeKind.Local).AddTicks(2801)
                        },
                        new
                        {
                            Id = 8,
                            CashierId = 4,
                            PaidOnDate = new DateTime(2024, 1, 4, 15, 42, 13, 810, DateTimeKind.Local).AddTicks(2802)
                        },
                        new
                        {
                            Id = 9,
                            CashierId = 5
                        },
                        new
                        {
                            Id = 10,
                            CashierId = 5,
                            PaidOnDate = new DateTime(2024, 1, 4, 15, 42, 13, 810, DateTimeKind.Local).AddTicks(2804)
                        },
                        new
                        {
                            Id = 11,
                            CashierId = 6,
                            PaidOnDate = new DateTime(2024, 1, 4, 15, 42, 13, 810, DateTimeKind.Local).AddTicks(2805)
                        },
                        new
                        {
                            Id = 12,
                            CashierId = 6,
                            PaidOnDate = new DateTime(2024, 1, 4, 15, 42, 13, 810, DateTimeKind.Local).AddTicks(2806)
                        },
                        new
                        {
                            Id = 13,
                            CashierId = 7,
                            PaidOnDate = new DateTime(2024, 1, 4, 15, 42, 13, 810, DateTimeKind.Local).AddTicks(2808)
                        },
                        new
                        {
                            Id = 14,
                            CashierId = 7,
                            PaidOnDate = new DateTime(2024, 1, 4, 15, 42, 13, 810, DateTimeKind.Local).AddTicks(2810)
                        },
                        new
                        {
                            Id = 15,
                            CashierId = 8,
                            PaidOnDate = new DateTime(2024, 1, 4, 15, 42, 13, 810, DateTimeKind.Local).AddTicks(2811)
                        },
                        new
                        {
                            Id = 16,
                            CashierId = 8,
                            PaidOnDate = new DateTime(2024, 1, 4, 15, 42, 13, 810, DateTimeKind.Local).AddTicks(2812)
                        },
                        new
                        {
                            Id = 17,
                            CashierId = 9,
                            PaidOnDate = new DateTime(2024, 1, 4, 15, 42, 13, 810, DateTimeKind.Local).AddTicks(2814)
                        },
                        new
                        {
                            Id = 18,
                            CashierId = 9,
                            PaidOnDate = new DateTime(2024, 1, 4, 15, 42, 13, 810, DateTimeKind.Local).AddTicks(2815)
                        },
                        new
                        {
                            Id = 19,
                            CashierId = 10,
                            PaidOnDate = new DateTime(2024, 1, 4, 15, 42, 13, 810, DateTimeKind.Local).AddTicks(2816)
                        },
                        new
                        {
                            Id = 20,
                            CashierId = 10
                        });
                });

            modelBuilder.Entity("CornerStore.Models.OrderProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = 1,
                            ProductId = 1,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 2,
                            OrderId = 1,
                            ProductId = 3,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 3,
                            OrderId = 1,
                            ProductId = 7,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 4,
                            OrderId = 1,
                            ProductId = 8,
                            Quantity = 4
                        },
                        new
                        {
                            Id = 5,
                            OrderId = 1,
                            ProductId = 10,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 6,
                            OrderId = 2,
                            ProductId = 12,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 7,
                            OrderId = 2,
                            ProductId = 15,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 8,
                            OrderId = 3,
                            ProductId = 9,
                            Quantity = 6
                        },
                        new
                        {
                            Id = 9,
                            OrderId = 3,
                            ProductId = 4,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 10,
                            OrderId = 3,
                            ProductId = 11,
                            Quantity = 4
                        },
                        new
                        {
                            Id = 11,
                            OrderId = 4,
                            ProductId = 6,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 12,
                            OrderId = 4,
                            ProductId = 13,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 13,
                            OrderId = 4,
                            ProductId = 14,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 14,
                            OrderId = 5,
                            ProductId = 2,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 15,
                            OrderId = 5,
                            ProductId = 3,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 16,
                            OrderId = 6,
                            ProductId = 5,
                            Quantity = 4
                        },
                        new
                        {
                            Id = 17,
                            OrderId = 6,
                            ProductId = 10,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 18,
                            OrderId = 7,
                            ProductId = 12,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 19,
                            OrderId = 7,
                            ProductId = 14,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 20,
                            OrderId = 7,
                            ProductId = 15,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 21,
                            OrderId = 8,
                            ProductId = 5,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 22,
                            OrderId = 20,
                            ProductId = 7,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 23,
                            OrderId = 20,
                            ProductId = 8,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 24,
                            OrderId = 19,
                            ProductId = 10,
                            Quantity = 4
                        },
                        new
                        {
                            Id = 25,
                            OrderId = 8,
                            ProductId = 12,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 26,
                            OrderId = 19,
                            ProductId = 15,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 27,
                            OrderId = 18,
                            ProductId = 9,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 28,
                            OrderId = 18,
                            ProductId = 4,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 29,
                            OrderId = 17,
                            ProductId = 11,
                            Quantity = 5
                        },
                        new
                        {
                            Id = 30,
                            OrderId = 17,
                            ProductId = 6,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 31,
                            OrderId = 16,
                            ProductId = 13,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 32,
                            OrderId = 16,
                            ProductId = 14,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 33,
                            OrderId = 15,
                            ProductId = 2,
                            Quantity = 4
                        },
                        new
                        {
                            Id = 34,
                            OrderId = 15,
                            ProductId = 3,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 35,
                            OrderId = 14,
                            ProductId = 5,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 36,
                            OrderId = 13,
                            ProductId = 10,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 37,
                            OrderId = 12,
                            ProductId = 12,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 38,
                            OrderId = 11,
                            ProductId = 14,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 39,
                            OrderId = 10,
                            ProductId = 15,
                            Quantity = 4
                        },
                        new
                        {
                            Id = 40,
                            OrderId = 9,
                            ProductId = 11,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("CornerStore.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Pepsi Cola",
                            CategoryId = 2,
                            Price = 2.00m,
                            ProductName = "Pepsi"
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Frito-Lay",
                            CategoryId = 1,
                            Price = 1.50m,
                            ProductName = "Doritos"
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Mars, Incorporated",
                            CategoryId = 3,
                            Price = 1.20m,
                            ProductName = "Snickers"
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Ben & Jerry's",
                            CategoryId = 4,
                            Price = 3.50m,
                            ProductName = "Ice Cream"
                        },
                        new
                        {
                            Id = 5,
                            Brand = "Bounty",
                            CategoryId = 5,
                            Price = 2.80m,
                            ProductName = "Paper Towels"
                        },
                        new
                        {
                            Id = 6,
                            Brand = "Pantene",
                            CategoryId = 6,
                            Price = 4.50m,
                            ProductName = "Shampoo"
                        },
                        new
                        {
                            Id = 7,
                            Brand = "Local Bakery",
                            CategoryId = 7,
                            Price = 1.80m,
                            ProductName = "Baguette"
                        },
                        new
                        {
                            Id = 8,
                            Brand = "Organic Valley",
                            CategoryId = 8,
                            Price = 2.20m,
                            ProductName = "Milk"
                        },
                        new
                        {
                            Id = 9,
                            Brand = "Washington Apples",
                            CategoryId = 9,
                            Price = 1.00m,
                            ProductName = "Apples"
                        },
                        new
                        {
                            Id = 10,
                            Brand = "Colgate",
                            CategoryId = 10,
                            Price = 3.00m,
                            ProductName = "Toothpaste"
                        },
                        new
                        {
                            Id = 11,
                            Brand = "The Coca-Cola Company",
                            CategoryId = 2,
                            Price = 1.80m,
                            ProductName = "Coca-Cola"
                        },
                        new
                        {
                            Id = 12,
                            Brand = "Frito-Lay",
                            CategoryId = 1,
                            Price = 1.50m,
                            ProductName = "Lays"
                        },
                        new
                        {
                            Id = 13,
                            Brand = "Mars, Incorporated",
                            CategoryId = 3,
                            Price = 1.20m,
                            ProductName = "Twix"
                        },
                        new
                        {
                            Id = 14,
                            Brand = "DiGiorno",
                            CategoryId = 4,
                            Price = 4.50m,
                            ProductName = "Frozen Pizza"
                        },
                        new
                        {
                            Id = 15,
                            Brand = "Dove",
                            CategoryId = 6,
                            Price = 2.50m,
                            ProductName = "Soap"
                        });
                });

            modelBuilder.Entity("CornerStore.Models.Order", b =>
                {
                    b.HasOne("CornerStore.Models.Cashier", null)
                        .WithMany("Orders")
                        .HasForeignKey("CashierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CornerStore.Models.OrderProduct", b =>
                {
                    b.HasOne("CornerStore.Models.Order", null)
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CornerStore.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CornerStore.Models.Product", b =>
                {
                    b.HasOne("CornerStore.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CornerStore.Models.Cashier", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("CornerStore.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("CornerStore.Models.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
